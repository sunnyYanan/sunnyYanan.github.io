<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>Actually, less is more!</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 08 Mar 2017 21:07:28 +0800</pubDate>
    <lastBuildDate>Wed, 08 Mar 2017 21:07:28 +0800</lastBuildDate>
    <generator>Jekyll v3.3.0</generator>
    
      <item>
        <title>jquery小技巧</title>
        <description>
&lt;p&gt;1、禁止右键点击&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$(document).ready(function(){
	$(document).bind(&quot;contextmenu&quot;,function(e){
		return false;
	});
})
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2、检测浏览器&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$(document).ready(function(){
	//target firefox 2 and above
	if($.browser.mozilla &amp;amp;&amp;amp; $.browser.version&amp;gt;='1.8'){

}
//target safari
if($.browser.safari){
	
}
//target chrome
if($.browser.chrome){
	
}
if($.browser.camino){
	
}
if($.browser.opera){
	
}
if($.browser.msie &amp;amp;&amp;amp; $.browser.version &amp;lt;= 6) {
	
}
if($.browser.msie &amp;amp;&amp;amp; $.browser.version &amp;gt; 6) {
	
}
});
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3、预加载图片&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$(document).ready(function(){
	jQuery.preloadImages = function(){
	for(var i =0; i&amp;lt;ARGUMENT.LENGTH; jQuery(?&amp;lt;img {i++)&amp;gt;&quot;).attr(&quot;src&quot;, arguments[i]);
}
}
//how to use
$.preloadImages(&quot;image1.jpg&quot;);
})
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;4、返回页面顶部&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$(document).ready(function() { 
$('a[href*=#]').click(function() { 
	if (location.pathname.replace(/^\//,'') == this.pathname.replace(/^\//,'') 
	&amp;amp;&amp;amp; location.hostname == this.hostname) { 
		var $target = $(this.hash); 
		$target = $target.length &amp;amp;&amp;amp; $target || $('[name=' + this.hash.slice(1) +']'); 
		if ($target.length) { 
			var targetOffset = $target.offset().top; 
			$('html,body').animate({scrollTop: targetOffset}, 900); 
			return false; 
		}
 	} 
 }); 
 // how to use 
 // place this where you want to scroll to 
 &amp;lt;A name=top&amp;gt;&amp;lt;/A&amp;gt; 
 // the link 
 &amp;lt;A href=&quot;#top&quot;&amp;gt;go to top&amp;lt;/A&amp;gt; });

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;5、返回顶部按钮&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// Back to top 
$('a.top').click(function () { 
$(document.body).animate({scrollTop: 0}, 800); 
return false; 
}); 
&amp;lt;!-- Create an anchor tag --&amp;gt;
 &amp;lt;a href=&quot;#&quot;&amp;gt;Back to top&amp;lt;/a&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;6、jQuery延时加载功能&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$(document).ready(function() { 
window.setTimeout(function() {
 // do something 
 }, 1000); });

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;7、与其它js类库冲突解决方案&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$(document).ready(function() { 
var $jq = jQuery.noConflict();
 $jq('#id').show(); 
 });

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://www.imooc.com/article/8329&quot;&gt;原文章地址&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Mar 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/03/08/jquery-skills/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/03/08/jquery-skills/</guid>
        
        <category>jquery</category>
        
        
        <category>前端开发</category>
        
      </item>
    
      <item>
        <title>react学习</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;遇到的问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;学习过程&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;知识点&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section&quot;&gt;遇到的问题&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;npm install -g create-react-app 遇到的问题：Npm Please try using this command again as root/administrator
    &lt;ul&gt;
      &lt;li&gt;解决方案：&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo chown -R $USER /usr/local&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-1&quot;&gt;学习过程&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;学习Create React App－－https://github.com/facebookincubator/create-react-app#getting-started&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-2&quot;&gt;知识点&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;a modern build pipeline typically consisits of: a package manager, such as yarn or npm, to manager third-party packages;a bundler, sunch as webpack or browserify, to bundle code into small packages to optimize load time; a compiler such as babel.&lt;/li&gt;
  &lt;li&gt;building blocks of React apps: elements and components&lt;/li&gt;
  &lt;li&gt;null—&amp;gt;non-value; undefined—&amp;gt;uninitialized value &lt;strong&gt;[js内容]&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;component
    &lt;ul&gt;
      &lt;li&gt;one write style&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
function test(props) {
return &amp;lt;p&amp;gt;hello,{props.name}&amp;lt;/p&amp;gt;
}
 &lt;/code&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;second write style(ES6)&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
class test extends React.Component {
  render(){
return &amp;lt;p&amp;gt;hello, {this.props.name}&amp;lt;/p&amp;gt;
  }
}
 &lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 15 Feb 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/02/15/react-stuty/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/02/15/react-stuty/</guid>
        
        <category>datatable</category>
        
        
        <category>前端开发</category>
        
      </item>
    
      <item>
        <title>datatable中的插件tabletools使用小结</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;简介：&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section&quot;&gt;简介：&lt;/h2&gt;
&lt;p&gt;作为jquery的表格插件，&lt;a href=&quot;https://datatables.net/&quot;&gt;datatable&lt;/a&gt;提供了方便的分类组合，搜索查找，各列排序等功能，是一个非常好的表格展示插件。&lt;/p&gt;

&lt;p&gt;datatable本身还提供了丰富的插件，使表格操作更智能。tabletools就是其中之一。&lt;/p&gt;

&lt;p&gt;一个简单的使用例子如&lt;a href=&quot;https://www.datatables.net/extensions/tabletools/&quot;&gt;官方&lt;/a&gt;，js初始化如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//Example initialisation
$(document).ready( function () {
    $('#example').dataTable( {
        &quot;dom&quot;: 'T&amp;lt;&quot;clear&quot;&amp;gt;lfrtip',
        &quot;tableTools&quot;: {
            &quot;sSwfPath&quot;: &quot;/swf/copy_csv_xls_pdf.swf&quot;
        }
    } );
} );
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;作者在使用过程中遇到的问题有：&lt;/p&gt;

&lt;p&gt;1、按钮点击无效，原因是swf路径问题，更改为：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$('#example').DataTable( {
        &quot;dom&quot;: 'T&amp;lt;&quot;clear&quot;&amp;gt;lfrtip',
        &quot;tableTools&quot;: {
            &quot;sSwfPath&quot;: &quot;//cdn.datatables.net/tabletools/2.2.4/swf/copy_csv_xls.swf&quot;,
            &quot;aButtons&quot;: [ &quot;xls&quot; ]
        }
    });
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2、button自定义以及增加描述，设置abuttons属性。如：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;aButtons&quot;:[
    {&quot;sExtends&quot;:&quot;copy&quot;, &quot;sButtonText&quot;:&quot;拷贝到粘贴板&quot;},
    {&quot;sExtends&quot;:&quot;xls&quot;, &quot;sButtonText&quot;:&quot;导出Excel&quot;},
    {&quot;sExtends&quot;:&quot;print&quot;, &quot;sButtonText&quot;:&quot;打印预览&quot;}
]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;附一个比较好的自定义按钮学习推荐：&lt;a href=&quot;http://phpflow.com/php/how-to-export-the-jquery-datatable-data-to-pdf-excel-csv-and-copy/&quot;&gt;http://phpflow.com/php/how-to-export-the-jquery-datatable-data-to-pdf-excel-csv-and-copy/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 24 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2016/11/24/tabletools-usage/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/11/24/tabletools-usage/</guid>
        
        <category>datatable</category>
        
        
        <category>前端开发</category>
        
      </item>
    
      <item>
        <title>js小知识［持续更新］</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;打开本地文件&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;文件读取&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;进制转换&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#map&quot; id=&quot;markdown-toc-map&quot;&gt;map操作&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#js&quot; id=&quot;markdown-toc-js&quot;&gt;JS动态数组&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-3&quot; id=&quot;markdown-toc-section-3&quot;&gt;数组排序&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#innerhtmlxxx-xxx&quot; id=&quot;markdown-toc-innerhtmlxxx-xxx&quot;&gt;innerhtml=xxx， xxx是一个数组对象&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-4&quot; id=&quot;markdown-toc-section-4&quot;&gt;小数点后保留2位小数&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#js-1&quot; id=&quot;markdown-toc-js-1&quot;&gt;JS动态增加表格数据&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#jsjson&quot; id=&quot;markdown-toc-jsjson&quot;&gt;JS处理json&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#jquerydatatable&quot; id=&quot;markdown-toc-jquerydatatable&quot;&gt;jquery插件datatable动态更新数据&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section&quot;&gt;打开本地文件&lt;/h2&gt;
&lt;p&gt;1、使用h5的文件api，具体参照&lt;a href=&quot;https://www.html5rocks.com/zh/tutorials/file/dndfiles/&quot;&gt;这里&lt;/a&gt;，但是由于选择一个文本内容很多的文件的时候，页面有卡顿的现象，故以为js处理读取文件的时候是同步读取的，带着这样的一个假设之后，去寻找异步读取文件的方法。找到的比较好的方法是：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;发送ajax请求
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;但是有一个问题就是，文件内容太大时，请求数据发送不过去，这时候就想发送文件的路径过去，然后再用java分析文件内容。这时候！坑爹的发现，js无法获取文件的完整路径，因为高版本的浏览器内核将文件路径进行了隐藏，格式都变成了c:/fakepath／x.xx的形式，这样就很不易用了（总不能让所有要使用这个工具的人，都去设置一下浏览器安全模式／或者建一个这样的目录吧）。重新找解决方案，然后在&lt;a href=&quot;http://ju.outofmemory.cn/entry/138159&quot;&gt;这篇文章&lt;/a&gt;中发现，filereader是异步读取内容的，那为什么当时会感觉到明显的卡顿呢，或许是因为为了验证是否正确的打开了文件，我用
  &lt;code class=&quot;highlighter-rouge&quot;&gt;
console.log()
 &lt;/code&gt;
  的方式，打印文件的内容，导致控制台输出大文本内容的时候出现了卡顿。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;这个过程中，还考虑是不是把文件内容先保存到本地，异步分析后，再删除该文件。&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;故而，重新修改了实现方式，仍然用filereader的方式，读取文件。哎！之所以这样，就是理解错了&lt;code class=&quot;highlighter-rouge&quot;&gt;filereader&lt;/code&gt;的读取方式！这时候体现了认真读官方文档的重要性！&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;文件读取&lt;/h2&gt;

&lt;p&gt;1、可以选用nodejs的readline方法;&lt;/p&gt;

&lt;p&gt;2、单纯用js。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;html&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;input id=&quot;file&quot; name=&quot;file&quot; type=&quot;file&quot;&amp;gt;&amp;lt;/input&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;js&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function handleLinkmapFileSelect(evt) {
    // Check for the various File API support.
    if (window.File &amp;amp;&amp;amp; window.FileReader &amp;amp;&amp;amp; window.FileList &amp;amp;&amp;amp; window.Blob) {
        // Great success! All the File APIs are supported.
        var files = evt.target.files; // FileList object

        var reader = new FileReader();

        reader.onload = function(e) {
            //console.log(typeof(e.target.result));//String
            
            var lines = e.target.result.split('\n');
            for(var line = 0; line &amp;lt; lines.length ; line++){
                console.log(lines[line]);
            }

        };
        reader.readAsText(files[0]);

    } else {
        toastr.info('The File APIs are not fully supported in this browser.');
    }

}

document.getElementById('file').addEventListener('change', handleLinkmapFileSelect, false);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-2&quot;&gt;进制转换&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//十进制转其他  
var x=110;  
alert(x);  
alert(x.toString(8));  
alert(x.toString(32));  
alert(x.toString(16));  
//其他转十进制  
var x='110';  
alert(parseInt(x,2));  
alert(parseInt(x,8));  
alert(parseInt(x,16));  
//其他转其他  
//先用parseInt转成十进制再用toString转到目标进制  
alert(String.fromCharCode(parseInt(141,8)))  
alert(parseInt('ff',16).toString(2));   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;map&quot;&gt;map操作&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var map = {}; 
map[&quot;key1&quot;] = &quot;Value1&quot;; // 加入值对 
map[&quot;key2&quot;] = &quot;Value2&quot;; 
map[&quot;key3&quot;] = &quot;Value3&quot;; 
if(&quot;key1&quot; in map) { //判断是否存在 
  alert(&quot;OK&quot;); 
}

for(var k in map) { // 遍历 
  alert(k + &quot; = &quot; + map[k]); 
}

delete map[&quot;key1&quot;]; // 删除
for(var k in map) { // 遍历 
  alert(k + &quot; = &quot; + map[k]); 
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;js&quot;&gt;JS动态数组&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;js里的数组的长度是可变的。
有两种声明方式：
var a = [];
或者
var a = new Array();
或者指定长度：
var a = new Array(10);
比如var a = [];
a.length等于0
a.push(1)后则a.length等于1

比如var a = new Array(10);
a.length等于10
如果a[12]=1，则a.length等于13了。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-3&quot;&gt;数组排序&lt;/h2&gt;
&lt;p&gt;你可能看到过这样的js数组排序方法&lt;a href=&quot;https://segmentfault.com/a/1190000005717963&quot;&gt;方法1&lt;/a&gt;，以及&lt;a href=&quot;https://my.oschina.net/code33/blog/384085&quot;&gt;更简单酷炫的2方法&lt;/a&gt;，但是实际应用中发现，当数组元素个数少于100，一层可以显示时，这样排序是没有问题的；但是当数据个数多于100，即数组的层级会自动进行分组，每100为一组，这时，以上2个方法都不好使了，使用&lt;a href=&quot;https://github.com/nie-xin/codewars/blob/master/README.md&quot;&gt;github上的方法3&lt;/a&gt;才正确，github才是正确的参考地方哇！&lt;/p&gt;

&lt;h2 id=&quot;innerhtmlxxx-xxx&quot;&gt;innerhtml=xxx， xxx是一个数组对象&lt;/h2&gt;
&lt;p&gt;首先，用jquery的方法获取id时&lt;code class=&quot;highlighter-rouge&quot;&gt;$(&quot;#test&quot;).innerHTML=xx&lt;/code&gt;，无法正常工作，需要用&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;document.getElementById(&quot;fileName&quot;).innerHTML = xxx;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;的方式，如果xxx直接为数组的名称，会发现输出的结果中，每个元素之间都会加入了“,”，此时须用调用.join()方法，修改元素间连接方式，完整示例是：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;document.getElementById(&quot;fileName&quot;).innerHTML = fileName.join(' ');
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;此外，还需要注意，往数组中添加内容时，为了能innerHTML后一行一个元素，需要在数组操作添加时，如xx.push(“a”)，加入&amp;lt;br／&amp;gt;，加”\\n\\r”的方式无效。完整示例：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xx.push(&quot;a&amp;lt;br/&amp;gt;&quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-4&quot;&gt;小数点后保留2位小数&lt;/h2&gt;
&lt;p&gt;1、四舍五入&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var num = 2.4451
num = num.toFixed(2) // 2.45 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;2、不四舍五入&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Math.floor(15.7784514000 * 100) / 100  
// 输出结果为 15.77
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;正则表达式&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Number(15.7784514000.toString().match(/^\d+(?:\.\d{0,2})?/))  
// 输出结果为 15.77,不能用于整数如 10 必须写为10.0000
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;js-1&quot;&gt;JS动态增加表格数据&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.lai18.com/content/410044.html&quot;&gt;参考&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;也可以使用datatables的方式，直接插入。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var t = $('#example').DataTable();
var counter = 1;
t.row.add( [
            counter +'.1',
            counter +'.2',
            counter +'.3',
            counter +'.4',
            counter +'.5'
        ] ).draw( false );

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;jsjson&quot;&gt;JS处理json&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/JoannaQ/p/3190879.html&quot;&gt;参考&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;jquerydatatable&quot;&gt;jquery插件datatable动态更新数据&lt;/h2&gt;
&lt;p&gt;先删除原有全部数据，再添加新数据，再生成datatable表。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var dataTable = $('#example').dataTable();
dataTable.fnClearTable();
dataTable.fnDraw();
dataTable.fnDestroy();
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/26632332/how-to-clear-datatable-with-onchange-in-jquery/26634006#26634006?newreg=ccb1fed7bf3e4a159104b899c694d6de&quot;&gt;参考&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 10 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2016/11/10/js-learn/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/11/10/js-learn/</guid>
        
        <category>js小知识</category>
        
        
        <category>前端开发</category>
        
      </item>
    
      <item>
        <title>一些好用的前端开发插件/工具</title>
        <description>
&lt;p&gt;&lt;a href=&quot;http://fontawesome.dashgame.com/&quot;&gt;完备的图标库fontawesome&lt;/a&gt;       &lt;a href=&quot;http://fontawesome.io/icons/&quot;&gt;以及它的英文网址&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.jqueryfuns.com/resource/view/1361&quot;&gt;包含各种好用插件的inspinia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/benben77/p/4679753.html&quot;&gt;自动的网页加载进度条插件pace.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://itunes.apple.com/cn/app/sip/id507257563?mt=12&quot;&gt;取色器sip&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://echarts.baidu.com/&quot;&gt;绘制图表工具echarts3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://fullcalendar.io/&quot;&gt;大日历插件fullcalendar&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 07 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2016/11/07/some-plugins-in-front-developing/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/11/07/some-plugins-in-front-developing/</guid>
        
        <category>前端开发插件</category>
        
        
        <category>前端开发</category>
        
      </item>
    
      <item>
        <title>杂七杂八</title>
        <description>
&lt;p&gt;总有些事&lt;/p&gt;

&lt;p&gt;是你知道不可为&lt;/p&gt;

&lt;p&gt;而必须为&lt;/p&gt;

&lt;p&gt;有些事&lt;/p&gt;

&lt;p&gt;是你想为之&lt;/p&gt;

&lt;p&gt;却不能为&lt;/p&gt;

&lt;p&gt;更可怕的是&lt;/p&gt;

&lt;p&gt;你不想为&lt;/p&gt;

&lt;p&gt;却必须为&lt;/p&gt;
</description>
        <pubDate>Thu, 03 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2016/11/03/thinking-during-work/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/11/03/thinking-during-work/</guid>
        
        <category>小诗</category>
        
        
        <category>杂想</category>
        
      </item>
    
      <item>
        <title>iOS ui testing初探</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;背景&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;入门&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;遇到的问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section&quot;&gt;背景&lt;/h2&gt;
&lt;p&gt;  xcode7发布后，引入了ui testing这一个新的ui测试框架，原有的ui automation慢慢地也不再维护了。在xcode 8中官方直接抛弃了ui automation（启动instrument后会发现，这个入口被完全拿掉了）。这就使得我们原有的基于ui automation搭建起来的ui自动化持续集成方式在iOS10上变得不可用，本地xcode如果升级xcode8后，脚本也不能维护编写了。
由于现在iOS10系统的占有量已经超过了50%，因此需要将原有的UI自动化思路迁移到UI testing上面。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;入门&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;新建uitesting
    &lt;ul&gt;
      &lt;li&gt;如果已有一个工程，只需要新建一个工程对应的UI target,路径🈶️2种
        &lt;ol&gt;
          &lt;li&gt;切换到test模块，点击左下角的＋，New UI Test Target&lt;/li&gt;
          &lt;li&gt;File － New － Target － Test － iOS UI Testing Bundle&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;如果是新建工程，则可以自动生成一个uitesting的target，这是一个类似于单测的存在&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;脚本录制
    &lt;ul&gt;
      &lt;li&gt;新建target之后，会默认带有一个.m或者.swift文件，取决于建立target时，选择的是oc 或swift，不过凭借苹果的这个尿性，还是建议用swift写。&lt;/li&gt;
      &lt;li&gt;点击该.m／.swift文件，在文件下方有一个红色的按钮，点击该按钮即可进行脚本的录制&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;脚本运行
    &lt;ul&gt;
      &lt;li&gt;录制或者编写代码后，可commond+u运行测试代码。在test模块可查看运行结果&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-2&quot;&gt;遇到的问题&lt;/h2&gt;
&lt;p&gt;1、录制完成后直接运行脚本，提示：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;No architectures to compile for (ONLY_ACTIVE_ARCH=YES, active arch=x86_64, VALID_ARCHS=i386)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt; 解决方法：在build setting中的Valid Architectures加入arm64即可&lt;/p&gt;
</description>
        <pubDate>Thu, 03 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2016/11/03/iOS-ui-test-first-try/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/11/03/iOS-ui-test-first-try/</guid>
        
        <category>ui testing</category>
        
        
        <category>iOS测试</category>
        
      </item>
    
      <item>
        <title>建立网站过程中遇到的问题</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;参考网址&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section&quot;&gt;问题&lt;/h2&gt;

&lt;p&gt;1、执行jekyll server后运行不起来，提示rouge错误，其实是环境没有配好，重新安装了jekyll后OK&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ gem install jekyll
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2、提示未配置分页，解决方式为在_config.yml中配置&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Gems
gems: [jekyll-paginate]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3、markdown解释器，Jekyll默认用maruku来解析markdown语言，由于本模版使用了kramdown解释器（解释数学公式比较快），故而需要安装该解释器，还有一个解释器为rdiscount，可以一并安装上&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ gem install rdiscount kramdown
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-1&quot;&gt;参考网址&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://alfred-sun.github.io/blog/2014/12/05/github-pages/&quot;&gt;搭建运行配置全教程&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.uisdc.com/photoshop-matting-techniques&quot;&gt;为了更改logo图片使用的ps抠图教程&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 01 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2016/11/01/build-the-web/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/11/01/build-the-web/</guid>
        
        <category>教程</category>
        
        
        <category>文档</category>
        
      </item>
    
      <item>
        <title>如何使用LessOrMore这个Jekyll模版</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;致谢&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;使用&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;下载&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-3&quot; id=&quot;markdown-toc-section-3&quot;&gt;配置&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-4&quot; id=&quot;markdown-toc-section-4&quot;&gt;如何写文章&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-5&quot; id=&quot;markdown-toc-section-5&quot;&gt;执行&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-6&quot; id=&quot;markdown-toc-section-6&quot;&gt;效果&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-7&quot; id=&quot;markdown-toc-section-7&quot;&gt;为什么重复造轮子&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-8&quot; id=&quot;markdown-toc-section-8&quot;&gt;关于作者&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section&quot;&gt;致谢&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;感谢&lt;a href=&quot;http://lesscss.cn/&quot;&gt;Less官网&lt;/a&gt;的样式，本Jekyll框架的样式都是基于Less官网的样式直接拷贝过来的。只是重构了JS，并且加入了Jekyll语法而已。&lt;/li&gt;
  &lt;li&gt;感谢&lt;a href=&quot;https://github.com/&quot;&gt;Github&lt;/a&gt;提供的代码维护和发布平台&lt;/li&gt;
  &lt;li&gt;感谢&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;团队做出如此优秀的产品&lt;/li&gt;
  &lt;li&gt;感谢&lt;a href=&quot;https://github.com/mattvh/solar-theme-jekyll&quot;&gt;Solar&lt;/a&gt;的原作者&lt;a href=&quot;http://www.webmaster-source.com/&quot;&gt;Matt Harzewski&lt;/a&gt;，在&lt;code class=&quot;highlighter-rouge&quot;&gt;2014.11&lt;/code&gt;-&lt;code class=&quot;highlighter-rouge&quot;&gt;2016.09&lt;/code&gt;的两年间，我的博客选用了此样式模版&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-1&quot;&gt;使用&lt;/h1&gt;

&lt;h2 id=&quot;section-2&quot;&gt;下载&lt;/h2&gt;

&lt;p&gt;使用git从&lt;a href=&quot;https://github.com/luoyan35714/LessOrMore.git&quot;&gt;LessOrMore&lt;/a&gt;主页下载项目&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone https://github.com/luoyan35714/LessOrMore.git&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-3&quot;&gt;配置&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LessOrMore&lt;/code&gt;项目需要配置的只有一个文件&lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;，打开之后按照如下进行配置。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;特别注意&lt;code class=&quot;highlighter-rouge&quot;&gt;baseurl&lt;/code&gt;的配置。如果是&lt;code class=&quot;highlighter-rouge&quot;&gt;***.github.io&lt;/code&gt;项目，不修改为空’‘的话，会导致JS,CSS等静态资源无法找到的错误&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;name: 博客名称
email: 邮箱地址
author: 作者名
url: 个人网站
&lt;span class=&quot;c&quot;&gt;### baseurl修改为项目名，如果项目是'***.github.io'，则设置为空''&lt;/span&gt;
baseurl: &lt;span class=&quot;s2&quot;&gt;&quot;/LessOrMore&quot;&lt;/span&gt;
resume_site: 个人简历网站
github: github地址
github_username: github用户名称
FB:
  comments :
    provider : duoshuo
    duoshuo:
        short_name : 多说账户
    disqus :
        short_name : Disqus账户&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-4&quot;&gt;如何写文章&lt;/h2&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;LessOrMore/_posts&lt;/code&gt;目录下新建一个文件，可以创建文件夹并在文件夹中添加文件，方便维护。在新建文件中粘贴如下信息，并修改以下的&lt;code class=&quot;highlighter-rouge&quot;&gt;titile&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;date&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;categories&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;tag&lt;/code&gt;的相关信息，添加&lt;code class=&quot;highlighter-rouge&quot;&gt;* content {:toc}&lt;/code&gt;为目录相关信息，在进行正文书写前需要在目录和正文之间输入至少2行空行。然后按照正常的Markdown语法书写正文。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;---
layout: post
&lt;span class=&quot;c&quot;&gt;#标题配置&lt;/span&gt;
title:  标题
&lt;span class=&quot;c&quot;&gt;#时间配置&lt;/span&gt;
date:   2016-08-27 01:08:00 +0800
&lt;span class=&quot;c&quot;&gt;#大类配置&lt;/span&gt;
categories: document
&lt;span class=&quot;c&quot;&gt;#小类配置&lt;/span&gt;
tag: 教程
---

&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; content
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;:toc&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


我是正文。我是正文。我是正文。我是正文。我是正文。我是正文。&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-5&quot;&gt;执行&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;jekyll server&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-6&quot;&gt;效果&lt;/h2&gt;
&lt;p&gt;打开浏览器并输入URL&lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:4000/&lt;/code&gt;,回车。&lt;/p&gt;

&lt;h1 id=&quot;section-7&quot;&gt;为什么重复造轮子&lt;/h1&gt;

&lt;p&gt;很明显，我在重复造轮子。在13年接触到GIT，14年末接触到Jekyll，然后搭建了自己的博客，当时是选用了&lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;JekyllThemes&lt;/a&gt;上的&lt;a href=&quot;https://github.com/mattvh/solar-theme-jekyll&quot;&gt;Solar&lt;/a&gt;主题，一直到现在。不过中间一直感觉页面风格还是偏暗，阅读不方便。并且有一些小的细节做的不是很好。在页面的跨平台浏览上有一些瑕疵。并且不区分一级标题和二级标题，导致没有重点强调。诸如此类，用了2年，用的越多，越发吃力，中间就一直在寻找新的能够让我一眼认定的主题。&lt;/p&gt;

&lt;p&gt;虽然设计好看的主题很多。但是真正适合拿来做博客的却不多。中间一直没有找到合适的主题。直到有一天看到Less官网的主题之后，豁然觉得这就是我的博客想要的样子。简单而又不平凡。所以就决定了要把博客迁移到这个主题，然后拿了两天晚上来把这个主题做出来。&lt;/p&gt;

&lt;p&gt;重复造了轮子，但是这个是迄今为止自己觉得最适合我的博客的轮子，所以是值得的！&lt;/p&gt;

&lt;h1 id=&quot;section-8&quot;&gt;关于作者&lt;/h1&gt;

&lt;p&gt;热爱开源，热爱折腾的Java程序猿。更多个人信息和联系方式可以参照&lt;a href=&quot;http://www.hifreud.com/Resume.io/&quot;&gt;我的简介&lt;/a&gt;。&lt;/p&gt;

</description>
        <pubDate>Sat, 27 Aug 2016 01:08:00 +0800</pubDate>
        <link>http://localhost:4000/2016/08/27/how-to-use-this-jekyll-theme/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/08/27/how-to-use-this-jekyll-theme/</guid>
        
        <category>教程</category>
        
        
        <category>文档</category>
        
      </item>
    
  </channel>
</rss>
