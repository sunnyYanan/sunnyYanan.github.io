<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>Actually, less is more!</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 11 Nov 2016 09:56:09 +0800</pubDate>
    <lastBuildDate>Fri, 11 Nov 2016 09:56:09 +0800</lastBuildDate>
    <generator>Jekyll v3.3.0</generator>
    
      <item>
        <title>h5打开本地文件－走过的弯路</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;背景&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section&quot;&gt;背景&lt;/h2&gt;
&lt;p&gt;想做个小工具，网页打开一个文件，分析这个文件里的内容，遇到了一些问题。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;问题&lt;/h2&gt;
&lt;p&gt;1、使用h5的文件api，具体参照&lt;a href=&quot;https://www.html5rocks.com/zh/tutorials/file/dndfiles/&quot;&gt;这里&lt;/a&gt;，但是由于选择一个文本内容很多的文件的时候，页面有卡顿的现象，故以为js处理读取文件的时候是同步读取的，带着这样的一个假设之后，去寻找异步读取文件的方法。找到的比较好的方法是：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;发送ajax请求
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;但是有一个问题就是，文件内容太大时，请求数据发送不过去，这时候就想发送文件的路径过去，然后再用java分析文件内容。这时候！坑爹的发现，js无法获取文件的完整路径，因为高版本的浏览器内核将文件路径进行了隐藏，格式都变成了c:/fakepath／x.xx的形式，这样就很不易用了（总不能让所有要使用这个工具的人，都去设置一下浏览器安全模式／或者建一个这样的目录吧）。重新找解决方案，然后在&lt;a href=&quot;http://ju.outofmemory.cn/entry/138159&quot;&gt;这篇文章&lt;/a&gt;中发现，filereader是异步读取内容的，那为什么当时会感觉到明显的卡顿呢，或许是因为为了验证是否正确的打开了文件，我用
  &lt;code class=&quot;highlighter-rouge&quot;&gt;
console.log()
 &lt;/code&gt;
  的方式，打印文件的内容，导致控制台输出大文本内容的时候出现了卡顿。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;这个过程中，还考虑是不是把文件内容先保存到本地，异步分析后，再删除该文件。&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;故而，重新修改了实现方式，仍然用filereader的方式，读取文件。哎！之所以这样，就是理解错了&lt;code class=&quot;highlighter-rouge&quot;&gt;filereader&lt;/code&gt;的读取方式！这时候体现了认真读官方文档的重要性！&lt;/p&gt;
</description>
        <pubDate>Thu, 10 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2016/11/10/js-read-file-problem/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/11/10/js-read-file-problem/</guid>
        
        <category>文件上传</category>
        
        
        <category>前端开发</category>
        
      </item>
    
      <item>
        <title>一些好用的前端开发插件/工具</title>
        <description>
&lt;p&gt;&lt;a href=&quot;http://fontawesome.dashgame.com/&quot;&gt;完备的图标库fontawesome&lt;/a&gt;       &lt;a href=&quot;http://fontawesome.io/icons/&quot;&gt;以及它的英文网址&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.jqueryfuns.com/resource/view/1361&quot;&gt;包含各种好用插件的inspinia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/benben77/p/4679753.html&quot;&gt;自动的网页加载进度条插件pace.js&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://itunes.apple.com/cn/app/sip/id507257563?mt=12&quot;&gt;取色器sip&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://echarts.baidu.com/&quot;&gt;绘制图表工具echarts3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://fullcalendar.io/&quot;&gt;大日历插件fullcalendar&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 07 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2016/11/07/some-plugins-in-front-developing/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/11/07/some-plugins-in-front-developing/</guid>
        
        <category>前端开发插件</category>
        
        
        <category>前端开发</category>
        
      </item>
    
      <item>
        <title>杂七杂八</title>
        <description>
&lt;p&gt;总有些事&lt;/p&gt;

&lt;p&gt;是你知道不可为&lt;/p&gt;

&lt;p&gt;而必须为&lt;/p&gt;

&lt;p&gt;有些事&lt;/p&gt;

&lt;p&gt;是你想为之&lt;/p&gt;

&lt;p&gt;却不能为&lt;/p&gt;

&lt;p&gt;更可怕的是&lt;/p&gt;

&lt;p&gt;你不想为&lt;/p&gt;

&lt;p&gt;却必须为&lt;/p&gt;
</description>
        <pubDate>Thu, 03 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2016/11/03/thinking-during-work/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/11/03/thinking-during-work/</guid>
        
        <category>小诗</category>
        
        
        <category>杂想</category>
        
      </item>
    
      <item>
        <title>iOS ui testing初探</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;背景&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;入门&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;遇到的问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section&quot;&gt;背景&lt;/h2&gt;
&lt;p&gt;  xcode7发布后，引入了ui testing这一个新的ui测试框架，原有的ui automation慢慢地也不再维护了。在xcode 8中官方直接抛弃了ui automation（启动instrument后会发现，这个入口被完全拿掉了）。这就使得我们原有的基于ui automation搭建起来的ui自动化持续集成方式在iOS10上变得不可用，本地xcode如果升级xcode8后，脚本也不能维护编写了。
由于现在iOS10系统的占有量已经超过了50%，因此需要将原有的UI自动化思路迁移到UI testing上面。&lt;/p&gt;

&lt;h2 id=&quot;section-1&quot;&gt;入门&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;新建uitesting
    &lt;ul&gt;
      &lt;li&gt;如果已有一个工程，只需要新建一个工程对应的UI target,路径🈶️2种
        &lt;ol&gt;
          &lt;li&gt;切换到test模块，点击左下角的＋，New UI Test Target&lt;/li&gt;
          &lt;li&gt;File － New － Target － Test － iOS UI Testing Bundle&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;如果是新建工程，则可以自动生成一个uitesting的target，这是一个类似于单测的存在&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;脚本录制
    &lt;ul&gt;
      &lt;li&gt;新建target之后，会默认带有一个.m或者.swift文件，取决于建立target时，选择的是oc 或swift，不过凭借苹果的这个尿性，还是建议用swift写。&lt;/li&gt;
      &lt;li&gt;点击该.m／.swift文件，在文件下方有一个红色的按钮，点击该按钮即可进行脚本的录制&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;脚本运行
    &lt;ul&gt;
      &lt;li&gt;录制或者编写代码后，可commond+u运行测试代码。在test模块可查看运行结果&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section-2&quot;&gt;遇到的问题&lt;/h2&gt;
&lt;p&gt;1、录制完成后直接运行脚本，提示：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;No architectures to compile for (ONLY_ACTIVE_ARCH=YES, active arch=x86_64, VALID_ARCHS=i386)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt; 解决方法：在build setting中的Valid Architectures加入arm64即可&lt;/p&gt;
</description>
        <pubDate>Thu, 03 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2016/11/03/iOS-ui-test-first-try/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/11/03/iOS-ui-test-first-try/</guid>
        
        <category>ui testing</category>
        
        
        <category>iOS测试</category>
        
      </item>
    
      <item>
        <title>建立网站过程中遇到的问题</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;参考网址&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section&quot;&gt;问题&lt;/h2&gt;

&lt;p&gt;1、执行jekyll server后运行不起来，提示rouge错误，其实是环境没有配好，重新安装了jekyll后OK&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ gem install jekyll
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2、提示未配置分页，解决方式为在_config.yml中配置&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Gems
gems: [jekyll-paginate]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3、markdown解释器，Jekyll默认用maruku来解析markdown语言，由于本模版使用了kramdown解释器（解释数学公式比较快），故而需要安装该解释器，还有一个解释器为rdiscount，可以一并安装上&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ gem install rdiscount kramdown
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-1&quot;&gt;参考网址&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://alfred-sun.github.io/blog/2014/12/05/github-pages/&quot;&gt;搭建运行配置全教程&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.uisdc.com/photoshop-matting-techniques&quot;&gt;为了更改logo图片使用的ps抠图教程&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 01 Nov 2016 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2016/11/01/build-the-web/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/11/01/build-the-web/</guid>
        
        <category>教程</category>
        
        
        <category>文档</category>
        
      </item>
    
      <item>
        <title>如何使用LessOrMore这个Jekyll模版</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#section&quot; id=&quot;markdown-toc-section&quot;&gt;致谢&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-1&quot; id=&quot;markdown-toc-section-1&quot;&gt;使用&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#section-2&quot; id=&quot;markdown-toc-section-2&quot;&gt;下载&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-3&quot; id=&quot;markdown-toc-section-3&quot;&gt;配置&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-4&quot; id=&quot;markdown-toc-section-4&quot;&gt;如何写文章&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-5&quot; id=&quot;markdown-toc-section-5&quot;&gt;执行&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#section-6&quot; id=&quot;markdown-toc-section-6&quot;&gt;效果&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-7&quot; id=&quot;markdown-toc-section-7&quot;&gt;为什么重复造轮子&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#section-8&quot; id=&quot;markdown-toc-section-8&quot;&gt;关于作者&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section&quot;&gt;致谢&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;感谢&lt;a href=&quot;http://lesscss.cn/&quot;&gt;Less官网&lt;/a&gt;的样式，本Jekyll框架的样式都是基于Less官网的样式直接拷贝过来的。只是重构了JS，并且加入了Jekyll语法而已。&lt;/li&gt;
  &lt;li&gt;感谢&lt;a href=&quot;https://github.com/&quot;&gt;Github&lt;/a&gt;提供的代码维护和发布平台&lt;/li&gt;
  &lt;li&gt;感谢&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;团队做出如此优秀的产品&lt;/li&gt;
  &lt;li&gt;感谢&lt;a href=&quot;https://github.com/mattvh/solar-theme-jekyll&quot;&gt;Solar&lt;/a&gt;的原作者&lt;a href=&quot;http://www.webmaster-source.com/&quot;&gt;Matt Harzewski&lt;/a&gt;，在&lt;code class=&quot;highlighter-rouge&quot;&gt;2014.11&lt;/code&gt;-&lt;code class=&quot;highlighter-rouge&quot;&gt;2016.09&lt;/code&gt;的两年间，我的博客选用了此样式模版&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;section-1&quot;&gt;使用&lt;/h1&gt;

&lt;h2 id=&quot;section-2&quot;&gt;下载&lt;/h2&gt;

&lt;p&gt;使用git从&lt;a href=&quot;https://github.com/luoyan35714/LessOrMore.git&quot;&gt;LessOrMore&lt;/a&gt;主页下载项目&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone https://github.com/luoyan35714/LessOrMore.git&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-3&quot;&gt;配置&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;LessOrMore&lt;/code&gt;项目需要配置的只有一个文件&lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;，打开之后按照如下进行配置。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;特别注意&lt;code class=&quot;highlighter-rouge&quot;&gt;baseurl&lt;/code&gt;的配置。如果是&lt;code class=&quot;highlighter-rouge&quot;&gt;***.github.io&lt;/code&gt;项目，不修改为空’‘的话，会导致JS,CSS等静态资源无法找到的错误&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;name: 博客名称
email: 邮箱地址
author: 作者名
url: 个人网站
&lt;span class=&quot;c&quot;&gt;### baseurl修改为项目名，如果项目是'***.github.io'，则设置为空''&lt;/span&gt;
baseurl: &lt;span class=&quot;s2&quot;&gt;&quot;/LessOrMore&quot;&lt;/span&gt;
resume_site: 个人简历网站
github: github地址
github_username: github用户名称
FB:
  comments :
    provider : duoshuo
    duoshuo:
        short_name : 多说账户
    disqus :
        short_name : Disqus账户&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-4&quot;&gt;如何写文章&lt;/h2&gt;

&lt;p&gt;在&lt;code class=&quot;highlighter-rouge&quot;&gt;LessOrMore/_posts&lt;/code&gt;目录下新建一个文件，可以创建文件夹并在文件夹中添加文件，方便维护。在新建文件中粘贴如下信息，并修改以下的&lt;code class=&quot;highlighter-rouge&quot;&gt;titile&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;date&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;categories&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;tag&lt;/code&gt;的相关信息，添加&lt;code class=&quot;highlighter-rouge&quot;&gt;* content {:toc}&lt;/code&gt;为目录相关信息，在进行正文书写前需要在目录和正文之间输入至少2行空行。然后按照正常的Markdown语法书写正文。&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;---
layout: post
&lt;span class=&quot;c&quot;&gt;#标题配置&lt;/span&gt;
title:  标题
&lt;span class=&quot;c&quot;&gt;#时间配置&lt;/span&gt;
date:   2016-08-27 01:08:00 +0800
&lt;span class=&quot;c&quot;&gt;#大类配置&lt;/span&gt;
categories: document
&lt;span class=&quot;c&quot;&gt;#小类配置&lt;/span&gt;
tag: 教程
---

&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; content
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;:toc&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


我是正文。我是正文。我是正文。我是正文。我是正文。我是正文。&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-5&quot;&gt;执行&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;jekyll server&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;section-6&quot;&gt;效果&lt;/h2&gt;
&lt;p&gt;打开浏览器并输入URL&lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:4000/&lt;/code&gt;,回车。&lt;/p&gt;

&lt;h1 id=&quot;section-7&quot;&gt;为什么重复造轮子&lt;/h1&gt;

&lt;p&gt;很明显，我在重复造轮子。在13年接触到GIT，14年末接触到Jekyll，然后搭建了自己的博客，当时是选用了&lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;JekyllThemes&lt;/a&gt;上的&lt;a href=&quot;https://github.com/mattvh/solar-theme-jekyll&quot;&gt;Solar&lt;/a&gt;主题，一直到现在。不过中间一直感觉页面风格还是偏暗，阅读不方便。并且有一些小的细节做的不是很好。在页面的跨平台浏览上有一些瑕疵。并且不区分一级标题和二级标题，导致没有重点强调。诸如此类，用了2年，用的越多，越发吃力，中间就一直在寻找新的能够让我一眼认定的主题。&lt;/p&gt;

&lt;p&gt;虽然设计好看的主题很多。但是真正适合拿来做博客的却不多。中间一直没有找到合适的主题。直到有一天看到Less官网的主题之后，豁然觉得这就是我的博客想要的样子。简单而又不平凡。所以就决定了要把博客迁移到这个主题，然后拿了两天晚上来把这个主题做出来。&lt;/p&gt;

&lt;p&gt;重复造了轮子，但是这个是迄今为止自己觉得最适合我的博客的轮子，所以是值得的！&lt;/p&gt;

&lt;h1 id=&quot;section-8&quot;&gt;关于作者&lt;/h1&gt;

&lt;p&gt;热爱开源，热爱折腾的Java程序猿。更多个人信息和联系方式可以参照&lt;a href=&quot;http://www.hifreud.com/Resume.io/&quot;&gt;我的简介&lt;/a&gt;。&lt;/p&gt;

</description>
        <pubDate>Sat, 27 Aug 2016 01:08:00 +0800</pubDate>
        <link>http://localhost:4000/2016/08/27/how-to-use-this-jekyll-theme/</link>
        <guid isPermaLink="true">http://localhost:4000/2016/08/27/how-to-use-this-jekyll-theme/</guid>
        
        <category>教程</category>
        
        
        <category>文档</category>
        
      </item>
    
  </channel>
</rss>
